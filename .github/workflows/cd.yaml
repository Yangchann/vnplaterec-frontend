name: CD Pipeline to EKS

on:
  # workflow_run:
  #   workflows: ["CI Pipeline"]
  #   types:
  #     - completed
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'Dockerfile'
      - 'package*.json'
      - 'Kubernetes/**'

env:
  DOCKER_IMAGE: giangttc/vnplaterec-frontend
  DOCKER_TAG: latest
  REGISTRY: docker.io
  APP_NAME: vnplaterec-frontend

jobs:
  Buil-and-Deploy:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:

    - name: Checkout frontend source code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate image tag
      id: tag
      run: |
        echo "IMAGE_TAG=v$(date +%Y%m%d)-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}
          ${{ env.DOCKER_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=production

    - name: Update Kubernetes manifests
      run: |
        # Update image tag in deployment.yml
        sed -i "s|image: ${{ env.DOCKER_IMAGE }}:.*|image: ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}|g" Kubernetes/deployment.yml

        # Commit and push changes
        echo "Updating deployment.yml with new image tag"
        grep "image:" Kubernetes/deployment.yml

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if there are changes to commit
        if git diff --quiet; then
          echo "No changes to commit."
          exit 0
        fi

        git add Kubernetes/deployment.yml
        git commit -m "Update image to ${{ steps.tag.outputs.IMAGE_TAG }}" || exit 0
        git push

    - name: Notify ArgoCD sync
      run: |
        echo "Triggering ArgoCD sync for application ${{ env.APP_NAME }}"
         echo "Monitor deployment at: ArgoCD UI"

    - name: Create deployment summary
      run: |
        echo "Frontend Deployment Summary:" >> $GITHUB_STEP_SUMMARY
        echo "-----------------------------" >> $GITHUB_STEP_SUMMARY
        echo "Application: ${{ env.APP_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "Image: ${{ env.DOCKER_IMAGE }}:${{ steps.tag.outputs.IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY
        echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "Deployed by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **NodePort**: http://\<NODE_IP\>:30007" >> $GITHUB_STEP_SUMMARY
        echo "View deployment at: ArgoCD UI" >> $GITHUB_STEP_SUMMARY
