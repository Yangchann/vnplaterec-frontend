name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '23'

jobs:
  set-timestamp:
    runs-on: ubuntu-latest
    outputs:
      TIMESTAMP: ${{ steps.set-timestamp.outputs.TIMESTAMP }}
    steps:
      - id: set-timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_OUTPUT

  test:
    uses: ./.github/workflows/test.yml
    permissions:
      security-events: write

  analysis:
    uses: ./.github/workflows/source_analysis.yml
    needs: test
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    permissions:
      security-events: write

  docker-trivy:
    uses: ./.github/workflows/docker_trivy.yml
    needs: [set-timestamp, test, analysis]
    with:
      TIMESTAMP: ${{ needs.set-timestamp.outputs.TIMESTAMP }}
    secrets:
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    permissions:
      contents: read
      security-events: write

  update-values:
    name: Update values in Helm Chart Repo
    needs: [set-timestamp, docker-trivy]
    runs-on: ubuntu-latest
    if: ${{ !contains(needs.*.result, 'failure') }}

    steps:
      - name: Checkout Helm Chart repo
        uses: actions/checkout@v4
        with:
          repository: cnmeow/vnplaterec-helmchart
          token: ${{ secrets.CN_GITHUB_TOKEN }}
          path: services

      - name: Update values.yaml
        run: |
          cd services/frontend/helm
          yq e -i ".image.tag = \"${{ needs.set-timestamp.outputs.TIMESTAMP }}\"" values.yaml

      - name: Commit and push changes
        run: |
          cd services
          git config user.email "22520361@gm.uit.edu.vn"
          git add .
          git commit -m "ci: update image tag to ${{ needs.set-timestamp.outputs.TIMESTAMP }}"
          git push

  notify:
    name: Slack Notification
    needs: [test, analysis, docker-trivy, update-values]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Notify Slack if Failure
        if: contains(needs.*.result, 'failure')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: danger
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_USERNAME: vnplaterec-frontend
          SLACK_TITLE: ‚ùå CI Pipeline Failed
          SLACK_MESSAGE: |
            üö® *Workflow failed!*
            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Branch: ${{ github.ref }}
            ‚Ä¢ Commit: ${{ github.sha }}
            ‚Ä¢ Triggered by: ${{ github.actor }}
            ‚Ä¢ Job: ${{ github.job }}
            ‚Ä¢ Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Notify Slack if Success
        if: ${{ !contains(needs.*.result, 'failure') }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: good
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_USERNAME: vnplaterec-frontend
          SLACK_TITLE: ‚úÖ CI Pipeline Success
          SLACK_MESSAGE: "All jobs passed successfully!"
